
package ec.edu.monster.ws;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSTicket", targetNamespace = "http://ws.monster.edu.ec/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSTicket {


    /**
     * 
     * @return
     *     returns java.util.List<ec.edu.monster.ws.Ticket>
     */
    @WebMethod
    @WebResult(name = "partidos", targetNamespace = "")
    @RequestWrapper(localName = "traerPartidos", targetNamespace = "http://ws.monster.edu.ec/", className = "ec.edu.monster.ws.TraerPartidos")
    @ResponseWrapper(localName = "traerPartidosResponse", targetNamespace = "http://ws.monster.edu.ec/", className = "ec.edu.monster.ws.TraerPartidosResponse")
    @Action(input = "http://ws.monster.edu.ec/WSTicket/traerPartidosRequest", output = "http://ws.monster.edu.ec/WSTicket/traerPartidosResponse")
    public List<Ticket> traerPartidos();

    /**
     * 
     * @param codigoPartido
     * @return
     *     returns java.util.List<ec.edu.monster.ws.Localidad>
     */
    @WebMethod
    @WebResult(name = "localidades", targetNamespace = "")
    @RequestWrapper(localName = "traerLocalidades", targetNamespace = "http://ws.monster.edu.ec/", className = "ec.edu.monster.ws.TraerLocalidades")
    @ResponseWrapper(localName = "traerLocalidadesResponse", targetNamespace = "http://ws.monster.edu.ec/", className = "ec.edu.monster.ws.TraerLocalidadesResponse")
    @Action(input = "http://ws.monster.edu.ec/WSTicket/traerLocalidadesRequest", output = "http://ws.monster.edu.ec/WSTicket/traerLocalidadesResponse")
    public List<Localidad> traerLocalidades(
        @WebParam(name = "codigoPartido", targetNamespace = "")
        int codigoPartido);

    /**
     * 
     * @param usuario
     * @return
     *     returns ec.edu.monster.ws.Cliente
     */
    @WebMethod
    @WebResult(name = "reporte", targetNamespace = "")
    @RequestWrapper(localName = "traerCliente", targetNamespace = "http://ws.monster.edu.ec/", className = "ec.edu.monster.ws.TraerCliente")
    @ResponseWrapper(localName = "traerClienteResponse", targetNamespace = "http://ws.monster.edu.ec/", className = "ec.edu.monster.ws.TraerClienteResponse")
    @Action(input = "http://ws.monster.edu.ec/WSTicket/traerClienteRequest", output = "http://ws.monster.edu.ec/WSTicket/traerClienteResponse")
    public Cliente traerCliente(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario);

    /**
     * 
     * @param codigoPartido
     * @return
     *     returns java.util.List<ec.edu.monster.ws.Factura>
     */
    @WebMethod
    @WebResult(name = "reporte", targetNamespace = "")
    @RequestWrapper(localName = "traerReporte", targetNamespace = "http://ws.monster.edu.ec/", className = "ec.edu.monster.ws.TraerReporte")
    @ResponseWrapper(localName = "traerReporteResponse", targetNamespace = "http://ws.monster.edu.ec/", className = "ec.edu.monster.ws.TraerReporteResponse")
    @Action(input = "http://ws.monster.edu.ec/WSTicket/traerReporteRequest", output = "http://ws.monster.edu.ec/WSTicket/traerReporteResponse")
    public List<Factura> traerReporte(
        @WebParam(name = "codigoPartido", targetNamespace = "")
        int codigoPartido);

    /**
     * 
     * @param apellidos
     * @param password
     * @param cedula
     * @param direccion
     * @param usuario
     * @param nombres
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "registroUsuario", targetNamespace = "http://ws.monster.edu.ec/", className = "ec.edu.monster.ws.RegistroUsuario")
    @Action(input = "http://ws.monster.edu.ec/WSTicket/registroUsuario")
    public void registroUsuario(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "nombres", targetNamespace = "")
        String nombres,
        @WebParam(name = "apellidos", targetNamespace = "")
        String apellidos,
        @WebParam(name = "cedula", targetNamespace = "")
        String cedula,
        @WebParam(name = "direccion", targetNamespace = "")
        String direccion);

    /**
     * 
     * @param cantGeneral
     * @param cantTribuna
     * @param nombreCliente
     * @param cedula
     * @param direccion
     * @param cantGeneralVisita
     * @param totalPrecio
     * @param cantPalco
     * @param codigoPartido
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "registroCompra", targetNamespace = "http://ws.monster.edu.ec/", className = "ec.edu.monster.ws.RegistroCompra")
    @Action(input = "http://ws.monster.edu.ec/WSTicket/registroCompra")
    public void registroCompra(
        @WebParam(name = "nombreCliente", targetNamespace = "")
        String nombreCliente,
        @WebParam(name = "cedula", targetNamespace = "")
        String cedula,
        @WebParam(name = "direccion", targetNamespace = "")
        String direccion,
        @WebParam(name = "cantPalco", targetNamespace = "")
        int cantPalco,
        @WebParam(name = "cantTribuna", targetNamespace = "")
        int cantTribuna,
        @WebParam(name = "cantGeneral", targetNamespace = "")
        int cantGeneral,
        @WebParam(name = "cantGeneralVisita", targetNamespace = "")
        int cantGeneralVisita,
        @WebParam(name = "totalPrecio", targetNamespace = "")
        double totalPrecio,
        @WebParam(name = "codigoPartido", targetNamespace = "")
        int codigoPartido);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "comprobar", targetNamespace = "")
    @RequestWrapper(localName = "comprobarUsuario", targetNamespace = "http://ws.monster.edu.ec/", className = "ec.edu.monster.ws.ComprobarUsuario")
    @ResponseWrapper(localName = "comprobarUsuarioResponse", targetNamespace = "http://ws.monster.edu.ec/", className = "ec.edu.monster.ws.ComprobarUsuarioResponse")
    @Action(input = "http://ws.monster.edu.ec/WSTicket/comprobarUsuarioRequest", output = "http://ws.monster.edu.ec/WSTicket/comprobarUsuarioResponse")
    public boolean comprobarUsuario(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

}
