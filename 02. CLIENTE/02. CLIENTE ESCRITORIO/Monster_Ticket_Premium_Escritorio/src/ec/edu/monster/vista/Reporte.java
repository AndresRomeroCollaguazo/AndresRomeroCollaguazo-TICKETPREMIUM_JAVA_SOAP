/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ec.edu.monster.vista;

import ec.edu.monster.controlador.TicketController;
import ec.edu.monster.ws.Factura;
import ec.edu.monster.ws.Localidad;
import ec.edu.monster.ws.Ticket;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jhonatan
 */
public class Reporte extends javax.swing.JFrame {

    private List<Ticket> lista;
    private List<Factura> reporte;
    private List<Localidad> localidades;
    private int index;
    private double precioConIva;
    private int totalPalco;
    private int totalTribuna;
    private int totalGeneral;
    private int totalGeneralVisita;
    /**
     * Creates new form Reporte
     */
    public Reporte() {
        initComponents();
        setLista(llenarComboBoxPartidos());
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblReporte = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cmbPartido = new javax.swing.JComboBox<>();
        btnConsulta = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblValores = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("REPORTE DE PARTIDO");

        tblReporte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Palco", "Tribuna", "General", "General Visitante", "V. Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblReporte);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("REPORTE DE PARTIDO");

        btnConsulta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnConsulta.setText("Consultar");
        btnConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setText("Regresar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tblValores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Localidad", "Vendido", "Recaudado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblValores);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbPartido, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnConsulta)))))
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPartido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsulta))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaActionPerformed
        setTabla();
    }//GEN-LAST:event_btnConsultaActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Menu menu = new Menu();
        menu.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reporte().setVisible(true);
            }
        });
    }
    
    private List<Ticket> llenarComboBoxPartidos() {
        TicketController controller = new TicketController();
        List<Ticket> lista = controller.traerPartidos();

        for (Ticket tk : lista) {
            String fechaFormateada = tk.getFechaPartido().toString().substring(0, 10);
            String aux = tk.getEquipoLocal() + " vs " + tk.getEquipoVisita() + " - " + fechaFormateada + " - " + tk.getHoraPartido();
            cmbPartido.addItem(aux);
        }

        return lista;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsulta;
    private javax.swing.JComboBox<String> cmbPartido;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblReporte;
    private javax.swing.JTable tblValores;
    // End of variables declaration//GEN-END:variables

    public void setTabla(){
        TicketController controller = new TicketController();
        setIndex(cmbPartido.getSelectedIndex());
        Ticket tk = getLista().get(index);
        localidades = controller.traerLocalidades(tk.getCodigoPartido());
        reporte = controller.traerReporte(tk.getCodigoPartido());
        DefaultTableModel tabla = (DefaultTableModel) tblReporte.getModel();
        tabla.setRowCount(0);
        double aux = 0;
        int auxP = 0, auxT = 0, auxG = 0, auxGV = 0;
        for (Factura fc : reporte) {
            aux = aux + fc.getPrecioTotal();
            auxP = auxP + fc.getCantPalco();
            auxT = auxT + fc.getCantTribuna();
            auxG = auxG + fc.getCantGeneral();
            auxGV = auxGV + fc.getCantGeneralVisita();
            Object[] rowData = {
                fc.getCantPalco(), fc.getCantTribuna(), fc.getCantGeneral(), fc.getCantGeneralVisita(), fc.getPrecioTotal()
            };
            tabla.addRow(rowData);
        }
        setPrecioConIva(aux);
        setTotalPalco(auxP);
        setTotalTribuna(auxT);
        setTotalGeneral(auxG);
        setTotalGeneralVisita(auxGV);
        List<Integer> totales = new ArrayList<>();
        totales.add(getTotalTribuna());
        totales.add(getTotalPalco());
        totales.add(getTotalGeneral());
        totales.add(getTotalGeneralVisita());
        
        DefaultTableModel tablaValores = (DefaultTableModel) tblValores.getModel();
        tablaValores.setRowCount(0);
        for (int i = 0; i < localidades.size(); i++) {
            Localidad lc = localidades.get(i);
            int total = totales.get(i);
            Object[] rowData = {
                lc.getNombreLocalidad(), total, lc.getPrecioLocalidad()*total
            };
            tablaValores.addRow(rowData);
        }
    }
    /**
     * @return the lista
     */
    public List<Ticket> getLista() {
        return lista;
    }

    /**
     * @param lista the lista to set
     */
    public void setLista(List<Ticket> lista) {
        this.lista = lista;
    }

    /**
     * @return the index
     */
    public int getIndex() {
        return index;
    }

    /**
     * @param index the index to set
     */
    public void setIndex(int index) {
        this.index = index;
    }

    /**
     * @return the reporte
     */
    public List<Factura> getReporte() {
        return reporte;
    }

    /**
     * @param reporte the reporte to set
     */
    public void setReporte(List<Factura> reporte) {
        this.reporte = reporte;
    }

    /**
     * @return the precioConIva
     */
    public double getPrecioConIva() {
        return precioConIva;
    }

    /**
     * @param precioConIva the precioConIva to set
     */
    public void setPrecioConIva(double precioConIva) {
        this.precioConIva = precioConIva;
    }

    /**
     * @return the totalPalco
     */
    public int getTotalPalco() {
        return totalPalco;
    }

    /**
     * @param totalPalco the totalPalco to set
     */
    public void setTotalPalco(int totalPalco) {
        this.totalPalco = totalPalco;
    }

    /**
     * @return the totalTribuna
     */
    public int getTotalTribuna() {
        return totalTribuna;
    }

    /**
     * @param totalTribuna the totalTribuna to set
     */
    public void setTotalTribuna(int totalTribuna) {
        this.totalTribuna = totalTribuna;
    }

    /**
     * @return the totalGeneral
     */
    public int getTotalGeneral() {
        return totalGeneral;
    }

    /**
     * @param totalGeneral the totalGeneral to set
     */
    public void setTotalGeneral(int totalGeneral) {
        this.totalGeneral = totalGeneral;
    }

    /**
     * @return the totalGeneralVisita
     */
    public int getTotalGeneralVisita() {
        return totalGeneralVisita;
    }

    /**
     * @param totalGeneralVisita the totalGeneralVisita to set
     */
    public void setTotalGeneralVisita(int totalGeneralVisita) {
        this.totalGeneralVisita = totalGeneralVisita;
    }

    /**
     * @return the localidades
     */
    public List<Localidad> getLocalidades() {
        return localidades;
    }

    /**
     * @param localidades the localidades to set
     */
    public void setLocalidades(List<Localidad> localidades) {
        this.localidades = localidades;
    }

}
