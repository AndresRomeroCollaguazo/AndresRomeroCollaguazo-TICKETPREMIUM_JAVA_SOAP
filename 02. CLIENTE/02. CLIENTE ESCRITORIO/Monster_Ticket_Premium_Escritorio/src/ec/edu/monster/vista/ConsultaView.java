/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ec.edu.monster.vista;

import ec.edu.monster.controlador.TicketController;
import ec.edu.monster.ws.Localidad;
import ec.edu.monster.ws.Ticket;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.AbstractCellEditor;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;

/**
 *
 * @author Jhonatan
 */
public class ConsultaView extends javax.swing.JFrame {

    private SpinnerNumberModel modelos;
    private List<Ticket> lista;
    private List<Localidad> listaLocalidad;
    private int index;
    private int cantPalcos;
    private int cantTribuna;
    private int cantGeneral;
    private int cantGeneralVisita;
    private List<Integer> cantidades;

    /**
     * Creates new form ConsultaView
     */
    public ConsultaView() {
        initComponents();
        setLista(llenarComboBoxPartidos());
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        cmbPartido = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnComprar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLocalidad = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TICKET PREMIUM - COMPRA");
        setBackground(new java.awt.Color(255, 255, 204));

        cmbPartido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPartidoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Partido:");

        btnBuscar.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnComprar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnComprar.setText("Comprar boletos");
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("TICKET PREMIUM");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tblLocalidad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Localidad", "Disponible", "Precio", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLocalidad);

        btnAgregar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 61, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnComprar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(36, 36, 36)
                                .addComponent(cmbPartido, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscar)))
                        .addGap(39, 39, 39))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(294, 294, 294))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPartido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnBuscar))
                .addGap(96, 96, 96)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnComprar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPartidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPartidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPartidoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        int in = cmbPartido.getSelectedIndex();
        Ticket tk = getLista().get(in);
        JComboBox comboBox = new JComboBox();
        setListaLocalidad(obtenerLocalidades(tk.getCodigoPartido()));

        for (Localidad lc : getListaLocalidad()) {
            comboBox.addItem(lc.getNombreLocalidad());
        }
        //lblEstadio.setText(tk.getNombreEstadio());
        DefaultTableModel tabla = (DefaultTableModel) tblLocalidad.getModel();
        tblLocalidad.setRowHeight(30);
        tabla.setRowCount(0);
        modelos = new SpinnerNumberModel(0, 0, 100, 1);
        crearNuevaCompra(tabla);
        TableColumn columna = tblLocalidad.getColumnModel().getColumn(3);
        columna.setCellEditor(new ConsultaView.SpinnerEditor(modelos));
        columna = tblLocalidad.getColumnModel().getColumn(0);
        columna.setCellEditor(new DefaultCellEditor(comboBox));

        comboBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String aux = (String) comboBox.getSelectedItem();
                System.out.println(aux);
                for (Localidad lc : getListaLocalidad()) {
                    if (lc.getNombreLocalidad().equals(aux)) {

                        int row = tblLocalidad.getSelectedRow();
                        tblLocalidad.setValueAt(lc.getNombreLocalidad(), row, 0);
                        tblLocalidad.setValueAt(lc.getDisponibilidadLocalidad(), row, 1);
                        tblLocalidad.setValueAt(lc.getPrecioLocalidad(), row, 2);
//                        Object[] rowData = {
//                            lc.getNombreLocalidad(), lc.getDisponibilidadLocalidad(), lc.getPrecioLocalidad(), 0
//                        };
//                        tabla.insertRow(tblLocalidad.getEditingRow(), rowData);
                    }
                }
            }

        });

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void crearNuevaCompra(DefaultTableModel tabla) {
        Object[] rowData = {
            "Escoger Localidad", "", 0, 0
        };
        tabla.addRow(rowData);
    }

    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprarActionPerformed
        setIndex(cmbPartido.getSelectedIndex());
        List<Integer> aux = new ArrayList<>();
        Map<String, Integer> cantidadesEscogidas = new HashMap<>();

        for (int i = 0; i < tblLocalidad.getRowCount(); i++) {
            Object valorCelda = tblLocalidad.getModel().getValueAt(i, 0);
            Object valorCantidad = tblLocalidad.getModel().getValueAt(i, 3);
            String localidad = null;

            if (valorCelda instanceof String) {
                localidad = (String) valorCelda;
                if (valorCantidad instanceof Integer) {
                    for (Localidad lc : getListaLocalidad()) {
                        if (lc.getNombreLocalidad().equals(localidad)) {
                            int valorSpinner = (int) valorCantidad;
                            if (!cantidadesEscogidas.containsKey(localidad)) {
                                cantidadesEscogidas.put(localidad, valorSpinner);
                            } else {
                                cantidadesEscogidas.put(localidad, cantidadesEscogidas.get(localidad) + valorSpinner);
                            }

                        }
                    }

                }

            }

        }

        for (Map.Entry<String, Integer> entry : cantidadesEscogidas.entrySet()) {
            System.out.println(entry.getKey() + " = " + entry.getValue());
        }
        for (int i = 0; i < getListaLocalidad().size(); i++) {
            Localidad lc = getListaLocalidad().get(i);
            if (cantidadesEscogidas.containsKey(lc.getNombreLocalidad())) {
                aux.add(cantidadesEscogidas.get(lc.getNombreLocalidad()));
            } else {
                aux.add(0);
            }

        }

        for (Integer integer : aux) {
            System.out.println(integer);
        }

        setCantidades(aux);
        ConfirmacionCompra compra = new ConfirmacionCompra();
        compra.setCantidades(cantidades);
        compra.setIndex(index);
        compra.setTabla();
        compra.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnComprarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Menu menu = new Menu();
        menu.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        DefaultTableModel tabla = (DefaultTableModel) tblLocalidad.getModel();
        crearNuevaCompra(tabla);
    }//GEN-LAST:event_btnAgregarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaView().setVisible(true);

            }
        });
    }

    private List<Ticket> llenarComboBoxPartidos() {
        TicketController controller = new TicketController();
        List<Ticket> lista = controller.traerPartidos();

        for (Ticket tk : lista) {
            String fechaFormateada = tk.getFechaPartido().toString().substring(0, 10);
            String aux = tk.getEquipoLocal() + " vs " + tk.getEquipoVisita() + " - " + fechaFormateada + " - " + tk.getHoraPartido();
            cmbPartido.addItem(aux);
        }

        return lista;
    }

    private List<Localidad> obtenerLocalidades(int codigoPartido) {
        TicketController controller = new TicketController();
        List<Localidad> lista = controller.traerLocalidades(codigoPartido);
        return lista;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnComprar;
    private javax.swing.JComboBox<String> cmbPartido;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblLocalidad;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the lista
     */
    public List<Ticket> getLista() {
        return lista;
    }

    /**
     * @return the listaLocalidad
     */
    public List<Localidad> getListaLocalidad() {
        return listaLocalidad;
    }

    /**
     * @return the index
     */
    public int getIndex() {
        return index;
    }

    /**
     * @param lista the lista to set
     */
    public void setLista(List<Ticket> lista) {
        this.lista = lista;
    }

    /**
     * @param listaLocalidad the listaLocalidad to set
     */
    public void setListaLocalidad(List<Localidad> listaLocalidad) {
        this.listaLocalidad = listaLocalidad;
    }

    /**
     * @param index the index to set
     */
    public void setIndex(int index) {
        this.index = index;
    }

    /**
     * @return the cantPalcos
     */
    public int getCantPalcos() {
        return cantPalcos;
    }

    /**
     * @param cantPalcos the cantPalcos to set
     */
    public void setCantPalcos(int cantPalcos) {
        this.cantPalcos = cantPalcos;
    }

    /**
     * @return the cantTribuna
     */
    public int getCantTribuna() {
        return cantTribuna;
    }

    /**
     * @param cantTribuna the cantTribuna to set
     */
    public void setCantTribuna(int cantTribuna) {
        this.cantTribuna = cantTribuna;
    }

    /**
     * @return the cantGeneral
     */
    public int getCantGeneral() {
        return cantGeneral;
    }

    /**
     * @param cantGeneral the cantGeneral to set
     */
    public void setCantGeneral(int cantGeneral) {
        this.cantGeneral = cantGeneral;
    }

    /**
     * @return the cantGeneralVisita
     */
    public int getCantGeneralVisita() {
        return cantGeneralVisita;
    }

    /**
     * @param cantGeneralVisita the cantGeneralVisita to set
     */
    public void setCantGeneralVisita(int cantGeneralVisita) {
        this.cantGeneralVisita = cantGeneralVisita;
    }

    class SpinnerEditor extends AbstractCellEditor implements TableCellEditor {

        private JSpinner spinner;

        public SpinnerEditor(SpinnerNumberModel modelo) {
            spinner = new JSpinner(modelo);
            spinner.addChangeListener(new ChangeListener() {
                @Override
                public void stateChanged(ChangeEvent e) {
                    // Actualizar el valor en el modelo de la tabla cuando se cambie el valor del spinner
                    stopCellEditing();
                }
            });
        }

        @Override
        public Object getCellEditorValue() {
            return spinner.getValue();
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            spinner.setValue(value);
            return spinner;
        }
    }

    /**
     * @return the cantidades
     */
    public List<Integer> getCantidades() {
        return cantidades;
    }

    /**
     * @param cantidades the cantidades to set
     */
    public void setCantidades(List<Integer> cantidades) {
        this.cantidades = cantidades;
    }
}
